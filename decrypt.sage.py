from sage.all_cmdline import *  

# a = Integer(3820149076078175358)
# b = Integer(1296618846080155687)
# modulus = Integer(11648516937377897327)
# xG = Integer(4612592634107804164)
# yG = Integer(6359529245154327104)
# xPubKey = Integer(9140537108692473465)
# yPubKey = Integer(10130615023776320406)
# xKG = Integer(7657281011886994152)
# yKG = Integer(10408646581210897023)
# xC = Integer(5414448462522866853)
# yC = Integer(5822639685215517063)

a = int(input("Enter a : "))
b = int(input("Enter b : ")) 
modulus = int(input("Enter the modulus : ")) 
E = EllipticCurve(GF(modulus), [a,b])
xG = int(input("Enter G coordinates (x) : "))
yG = int(input("Enter G coordinates (y) : "))
G = E(xG , yG )
xPubKey = int(input("Enter Public Key coordinates (x) : "))
yPubKey = int(input("Enter Public Key coordinates (y) : "))
PubKey = E(xPubKey , yPubKey )
xKG = int(input("Enter KG coordinates (x) : "))
yKG = int(input("Enter KG coordinates (y) : "))
KG = E(xKG , yKG )
xC = int(input("Enter C coordinates (x) : "))
yC = int(input("Enter C coordinates (y) : "))
C = E(xC , yC )
d = G.discrete_log(PubKey)
M = C-(d*KG)
print(f"M coordinates found : {M}")